[{"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\index.js":"1","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\reportWebVitals.js":"2","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\redux-store.js":"3","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\App.jsx":"4","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\AddProduct.jsx":"6","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\UpdateProduct.jsx":"7","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Navbar\\Navbar.jsx":"8","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Auth\\SignIn\\SignIn.jsx":"9","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\Catalog.jsx":"10","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\auth-reducer.js":"11","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\product-reducer.js":"12","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\FormsControls\\validators.js":"13","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Preloader\\Preloader.js":"14","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\Product.jsx":"15","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\FormsControls\\FormsControls.jsx":"16","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\firebase-service\\firebase.js":"17","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\firebase-service\\product-service.js":"18","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Auth\\SignUp\\SignUp.jsx":"19","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\app-reducer.js":"20","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\HOCS\\withAuthRedirect.jsx":"21","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\HOCS\\withSuspense.jsx":"22","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\utils\\utils.js":"23"},{"size":731,"mtime":1607939499626,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607705386786,"results":"26","hashOfConfig":"25"},{"size":683,"mtime":1608101683258,"results":"27","hashOfConfig":"25"},{"size":3163,"mtime":1608101711322,"results":"28","hashOfConfig":"25"},{"size":539,"mtime":1608090845498,"results":"29","hashOfConfig":"25"},{"size":4966,"mtime":1608096825649,"results":"30","hashOfConfig":"25"},{"size":7339,"mtime":1608142290982,"results":"31","hashOfConfig":"25"},{"size":1900,"mtime":1608102723353,"results":"32","hashOfConfig":"25"},{"size":1830,"mtime":1608090963363,"results":"33","hashOfConfig":"25"},{"size":1651,"mtime":1608101462278,"results":"34","hashOfConfig":"25"},{"size":1969,"mtime":1608101573115,"results":"35","hashOfConfig":"25"},{"size":5393,"mtime":1608101671215,"results":"36","hashOfConfig":"25"},{"size":3501,"mtime":1608098082388,"results":"37","hashOfConfig":"25"},{"size":292,"mtime":1608041219899,"results":"38","hashOfConfig":"25"},{"size":2103,"mtime":1608142156580,"results":"39","hashOfConfig":"25"},{"size":4212,"mtime":1608102042943,"results":"40","hashOfConfig":"25"},{"size":754,"mtime":1608777042624,"results":"41","hashOfConfig":"25"},{"size":1793,"mtime":1608101558618,"results":"42","hashOfConfig":"25"},{"size":1733,"mtime":1608090959211,"results":"43","hashOfConfig":"25"},{"size":680,"mtime":1607895252168,"results":"44","hashOfConfig":"25"},{"size":585,"mtime":1607890291216,"results":"45","hashOfConfig":"25"},{"size":482,"mtime":1608074496390,"results":"46","hashOfConfig":"25"},{"size":518,"mtime":1608095938595,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"14ggv4p",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\index.js",["102"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\n\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["103","104"],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\reportWebVitals.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\redux-store.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\App.jsx",["105"],"import React, { useEffect } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nimport { initializeApp } from \"./redux/app-reducer\";\n\nimport { withSuspense } from \"./components/HOCS/withSuspense\";\n\nimport UpdateProduct from \"./components/Catalog/UpdateProduct\";\nimport SignIn from \"./components/Auth/SignIn/SignIn\";\nimport SignUp from \"./components/Auth/SignUp/SignUp\";\n\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Preloader from \"./components/Preloader/Preloader\";\n\n// Ленивая загрузка выполнена из соображений о том что при перезагрузке страницы теряется state переменная isAuth,\n// и если пользователь еще не залогинен то все в порядке ибо его перенаправит на страницу\n// /signin ( так как я использую хок с перенаправлением на логин, если пользователь не авторизован ).\n// А вот если пользователь уже залогинен, то токен авторизации от firebase все еще хранится в indexedDB,\n// а значит при запросе onAuthStateChanged получит true и сразу же установит isAuth в true.\n// Проблема в том что будет происходить перенаправление с любой страницы на страницу /signin, а потом оттуда\n// почти сразу же на /catalog, и мало того что это будет выглядеть сумбурно, так еще и невозможно будет оставаться\n// на страницах обновления и создания товара.\nconst Catalog = React.lazy(() => import(\"./components/Catalog/Catalog\"));\nconst AddProduct = React.lazy(() => import(\"./components/Catalog/AddProduct\"));\n\nconst SuspendedCatalog = withSuspense(Catalog);\nconst SuspendedAddProduct = withSuspense(AddProduct);\nconst App = React.memo((props) => {\n  useEffect(() => {\n    props.initializeApp();\n  }, [props.initializeApp]);\n  if (!props.initialized) return <Preloader />;\n  console.log(\"here\");\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <Navbar />\n      <div className=\"app-wrapper-content\">\n        <Route\n          exact\n          path={[\"/catalog\", \"/\"]}\n          render={() => <SuspendedCatalog />}\n        />\n\n        <Route path=\"/add_product\" render={() => <SuspendedAddProduct />} />\n        <Route\n          exact\n          path=\"/catalog/:productKey\"\n          render={() => <UpdateProduct />}\n        />\n        <Route path=\"/signin\" render={() => <SignIn />} />\n        <Route path=\"/signup\" render={() => <SignUp />} />\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\AddProduct.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\UpdateProduct.jsx",["106","107","108"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  Input,\r\n  createField,\r\n  ImageField,\r\n  TextArea,\r\n} from \"../FormsControls/FormsControls\";\r\nimport {\r\n  acceptableName,\r\n  maxLength200,\r\n  acceptablePrice,\r\n  acceptableDiscount,\r\n  acceptableDiscountEndDate,\r\n  validate,\r\n  imageFormat,\r\n  imageWidth_200_4000,\r\n  imageHeight_200_4000,\r\n} from \"../FormsControls/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../redux/product-reducer\";\r\nimport styles from \"../FormsControls/FormsControls.module.scss\";\r\nimport productStyles from \"./Product.module.scss\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport withAuthRedirect from \"../HOCS/withAuthRedirect\";\r\nimport { getStringDate } from \"../../utils/utils\";\r\n\r\nconst UpdateProductForm = (props) => {\r\n  const [productState, setPS] = useState(\r\n    Object.values(props.product).reduce(\r\n      (acum, val) => ((acum[val] = false), acum),\r\n      {}\r\n    )\r\n  );\r\n  const { handleSubmit, pristine, reset, submitting, error, product } = props;\r\n\r\n  const activate = (id) => {\r\n    setPS({ ...productState, [id]: true });\r\n  };\r\n\r\n  // if new data were passed -> it will become as input fields\r\n  const [setled, setSetled] = useState({});\r\n\r\n  const setNewProductR = useRef({});\r\n  function deactivate(id) {\r\n    if (\r\n      setNewProductR.current &&\r\n      setNewProductR.current.value !== void 0 &&\r\n      setNewProductR.current.value !== \"\"\r\n    ) {\r\n      setSetled((dict) => ({ ...dict, [id]: true }));\r\n      setNewProductR.current = void 0;\r\n    } else {\r\n      setPS({ ...productState, [id]: false });\r\n    }\r\n  }\r\n\r\n  const namelabel = \"Наименование товара\";\r\n  const photolabelOld = \"Текущее фото товара\";\r\n  const photolabel = \"Новое фото товара\";\r\n  const desclabel = \"Описание товара\";\r\n  const pricelabel = \"Цена товара\";\r\n  const disclabel = \"Скидка\";\r\n  const discountEndTimeabel = \"Дата окончания акции\";\r\n\r\n  const fieldsNames = {\r\n    name: \"name\",\r\n    photo: \"photo\",\r\n    description: \"description\",\r\n    price: \"price\",\r\n    discount: \"discount\",\r\n    discountEndTime: \"discountEndTime\",\r\n  };\r\n\r\n  const generOwnProps = (fieldsName) => ({\r\n    onBlur: () => {\r\n      !setled[fieldsName] && deactivate(fieldsName);\r\n    },\r\n    onFocus: () => {\r\n      activate(fieldsName);\r\n    },\r\n    autoFocus: true,\r\n    refa: setNewProductR,\r\n  });\r\n\r\n  const createUpdateField = (\r\n    fieldName,\r\n    label,\r\n    component,\r\n    validators = [],\r\n    innerProps = {},\r\n    specialField // date field or photo upload field\r\n  ) => (\r\n    <>\r\n      <div className={styles.fieldDescr}>{label}</div>\r\n      {specialField || productState[fieldName] ? (\r\n        createField(\r\n          `${product[fieldName] || \"...\"}`,\r\n          fieldName,\r\n          component,\r\n          validators,\r\n          {\r\n            ...innerProps,\r\n            ...generOwnProps(fieldName),\r\n          }\r\n        )\r\n      ) : (\r\n        <div\r\n          className={productStyles.hotUpdate}\r\n          id={fieldName}\r\n          onClick={() => activate(fieldName)}\r\n        >\r\n          {product[fieldName] || \"...\"}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const minDate = getStringDate();\r\n  const lastDate = getStringDate(product.discountEndTime);\r\n\r\n  const isDiscountActive = () => product.discountEndTime > +new Date();\r\n\r\n  console.log(lastDate);\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.wholeForm}>\r\n      {createUpdateField(fieldsNames.name, namelabel, TextArea, [\r\n        acceptableName,\r\n      ])}\r\n\r\n      <div className={styles.fieldDescr}>{photolabelOld}</div>\r\n      <div className=\"imgMiddleContainer\">\r\n        <img src={product.photo} alt=\"Data\" />\r\n      </div>\r\n\r\n      {createUpdateField(\r\n        fieldsNames.photo,\r\n        photolabel,\r\n        ImageField,\r\n        [imageFormat, imageWidth_200_4000, imageHeight_200_4000],\r\n        {\r\n          mimeType: \"image/jpeg, image/png\",\r\n          maxWidth: 4000,\r\n          minHeight: 200,\r\n          minWidth: 200,\r\n          maxHeight: 4000,\r\n          alt: \"Фото товара\",\r\n        },\r\n        true\r\n      )}\r\n      {createUpdateField(fieldsNames.description, desclabel, TextArea, [\r\n        maxLength200,\r\n      ])}\r\n      {createUpdateField(fieldsNames.price, pricelabel, Input, [\r\n        acceptablePrice,\r\n      ])}\r\n      {createUpdateField(fieldsNames.discount, disclabel, Input, [\r\n        acceptableDiscount,\r\n      ])}\r\n      {createUpdateField(\r\n        fieldsNames.discountEndTime,\r\n        discountEndTimeabel,\r\n        Input,\r\n        [acceptableDiscountEndDate],\r\n        {\r\n          type: \"date\",\r\n          min: minDate,\r\n          lastDateValue: isDiscountActive() ? lastDate : void 0,\r\n        },\r\n        true\r\n      )}\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div className=\"\">\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          Обновить\r\n        </button>\r\n      </div>\r\n      <div className=\"\">\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n          Очистить значения\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UpdateProductReduxForm = reduxForm({\r\n  form: \"updateProduct\",\r\n  validate,\r\n})(UpdateProductForm);\r\n\r\nconst UpdateProduct = ({\r\n  updateProduct,\r\n  getProduct,\r\n  currentProduct,\r\n  isFetching,\r\n  ...props\r\n}) => {\r\n  const [hasCP, setCP] = useState(false);\r\n\r\n  const refUpdated = useRef();\r\n\r\n  useEffect(() => {\r\n    if (refUpdated.current) {\r\n      props.history.push(\"/catalog\");\r\n    }\r\n  }, [isFetching]);\r\n\r\n  const onSubmit = async (formData) => {\r\n    if (formData.discountEndTime) {\r\n      formData.discountEndTime = Date.parse(formData.discountEndTime);\r\n    }\r\n\r\n    if (formData.photo) {\r\n      formData = { ...formData, newPhoto: true };\r\n    }\r\n    let newProd = { ...currentProduct, ...formData };\r\n\r\n    console.log(currentProduct);\r\n    await updateProduct(currentProduct.key, newProd);\r\n    refUpdated.current = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      let productKey = props.match.params.productKey; // productKey\r\n      if (!productKey) {\r\n        //   <Redirect to=\"/catalog\" />;\r\n        props.history.push(\"/catalog\");\r\n      } else {\r\n        await getProduct(productKey);\r\n        setCP(true);\r\n      }\r\n    };\r\n    if (!hasCP) {\r\n      fetchProduct();\r\n    }\r\n  }, [props.match.params.key, getProduct, props.history, hasCP]);\r\n\r\n  if (!hasCP) return <Preloader />;\r\n  return (\r\n    <>\r\n      <div className={productStyles.productOperationContainer}>\r\n        <h1 className={productStyles.productOperationHeader}>Обновить товар</h1>\r\n        <UpdateProductReduxForm onSubmit={onSubmit} product={currentProduct} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFetching: state.products.isFetching,\r\n  currentProduct: state.products.selectedProduct,\r\n});\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { getProduct, updateProduct }),\r\n  withRouter\r\n)(UpdateProduct);\r\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Navbar\\Navbar.jsx",["109"],"import React, { useState } from \"react\";\r\nimport s from \"./Navbar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Hamburger from \"hamburger-react\";\r\nimport { signout } from \"../../redux/auth-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  // const changeOpen = () => setOpen((open) => !open);\r\n  return (\r\n    <>\r\n      <nav className={s.nav}>\r\n        <div className={s.humb}>\r\n          <Hamburger toggled={isOpen} toggle={setOpen} color=\"red\" size={100} />\r\n        </div>\r\n\r\n        {isOpen && (\r\n          // <nav className={s.navMenu} onBlur={changeOpen}>\r\n          <nav className={s.navMenu}>\r\n            <div className={s.item}>\r\n              <NavLink to=\"/catalog\" activeClassName={s.activeLink}>\r\n                Каталог товаров\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className={`${s.item} `}>\r\n              <NavLink to=\"/add_product\" activeClassName={s.activeLink}>\r\n                Добавить товар\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className={`${s.item} `}>\r\n              <NavLink to=\"/signup\" activeClassName={s.activeLink}>\r\n                Зарегестрироватся\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className={`${s.item}  `}>\r\n              <NavLink to=\"/signin\" activeClassName={s.activeLink}>\r\n                Войти\r\n              </NavLink>\r\n            </div>\r\n\r\n            {props.isAuth && (\r\n              <div className={`${s.item}  `}>\r\n                <a onClick={props.signout}>Выйти</a>\r\n              </div>\r\n            )}\r\n          </nav>\r\n        )}\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signout })(Navbar);\r\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Auth\\SignIn\\SignIn.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\Catalog.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\auth-reducer.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\product-reducer.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\FormsControls\\validators.js",["110"],"export const requiredField = (value) => {\r\n  if (value) return void 0;\r\n  return \"Обязательное поле!\";\r\n};\r\n\r\nconst maxLength = (max) => (value) =>\r\n  value && value.length > max ? `Допустимо не более ${max} символов` : void 0;\r\n\r\nconst minLength = (min) => (value) =>\r\n  value && value.length < min ? `Допустимо не менее ${min} символов` : void 0;\r\n\r\n// заголовок\r\nexport const minLength20 = minLength(20);\r\nexport const maxLength60 = maxLength(60);\r\n\r\nexport const acceptableName = (value) => {\r\n  if (minLength20(value) === void 0 && maxLength60(value) === void 0)\r\n    return void 0;\r\n  return \"Mинимум 20, максимум 60 символов\";\r\n};\r\n// описание товара\r\nexport const maxLength200 = maxLength(200);\r\n//   цена\r\nexport const acceptablePrice = (value) => {\r\n  if (value === void 0) return void 0;\r\n  let val = +value;\r\n  if (val.toFixed(2) == val) {\r\n    const [min, max] = [0.0, 99999999.99];\r\n    if (min <= val && val <= max) {\r\n      return void 0;\r\n    }\r\n  }\r\n  return \"Цена должна быть в формате с 2 числами после запятой: '0.00'. Максимальное значение: '99999999.99'\";\r\n};\r\n// Процент скидки\r\nexport const acceptableDiscount = (value) => {\r\n  if (value === void 0) return void 0;\r\n  let val = +value;\r\n  if (Number.isInteger(val)) {\r\n    if (10 <= val && val <= 90) {\r\n      return void 0;\r\n    } else {\r\n      return \"Число не в пределах 10-90 %\";\r\n    }\r\n  } else {\r\n    return \"Число не целое\";\r\n  }\r\n};\r\n\r\n//  \tДата окончания скидки\r\nexport const acceptableDiscountEndDate = (value) => {\r\n  if (value === void 0) return void 0;\r\n  if (Date.parse(value) > +new Date()) return void 0;\r\n  return \"Дата окончания скидки должна быть больше текущей даты\";\r\n};\r\n\r\nexport const validate = (values) => {\r\n  const errors = {};\r\n  if (values.discount) {\r\n    if (!values.discountEndTime) {\r\n      // || values.discountEndTime === \"...\"\r\n      errors.discountEndTime = \"Required\"; //Обязательное поле!\r\n    }\r\n  } else if (values.discountEndTime) {\r\n    if (!values.discount) {\r\n      //  || values.discount === \"...\"\r\n      errors.discount = \"Required\";\r\n    }\r\n  }\r\n  return errors;\r\n};\r\n\r\n// image validation\r\n\r\nexport const validateImageWidth = (minWidth, maxWidth) => (imageFile) => {\r\n  if (imageFile) {\r\n    if (imageFile.width > maxWidth || imageFile.width < minWidth) {\r\n      return `Ширина картинки должна быть не менее ${minWidth}px  не более ${maxWidth}px`;\r\n    }\r\n  }\r\n};\r\nexport const validateImageHeight = (minHeight, maxHeight) => (imageFile) => {\r\n  if (imageFile) {\r\n    if (imageFile.height > maxHeight || imageFile.height < minHeight) {\r\n      return `Высота картинки должна быть не менее ${minHeight}px и не более ${maxHeight}px`;\r\n    }\r\n  }\r\n};\r\nexport const validateImageFormat = (mimeType) => (imageFile) => {\r\n  if (imageFile) {\r\n    if (!mimeType.includes(imageFile.type)) {\r\n      return `Тип картинки должен быть одним из: ${mimeType}`;\r\n    }\r\n  }\r\n};\r\n\r\nexport const imageWidth_200_4000 = validateImageWidth(200, 4000);\r\nexport const imageHeight_200_4000 = validateImageHeight(200, 4000);\r\nexport const imageFormat = validateImageFormat(\"image/jpeg, image/png\");\r\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Preloader\\Preloader.js",["111"],"import React from \"react\";\r\nimport preloader from \"../../assets/images/preloader1.gif\";\r\nimport s from \"./Preloader.module.scss\";\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={preloader} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Catalog\\Product.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\FormsControls\\FormsControls.jsx",["112"],"import React, { useRef, useEffect } from \"react\";\r\nimport styles from \"./FormsControls.module.scss\";\r\nimport { Field } from \"redux-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport uploadIcon from \"../../assets/images/Upload-icon.png\";\r\n\r\n// field-level validation\r\nconst FormControl = ({\r\n  input,\r\n  meta: { touched, error, warning },\r\n  children,\r\n}) => {\r\n  const hasError = touched && error;\r\n  const hasWarn = touched && warning;\r\n  return (\r\n    <div\r\n      className={\r\n        styles.formControl +\r\n        \" \" +\r\n        (hasError ? styles.error : \"\") +\r\n        \" \" +\r\n        (hasWarn ? styles.warning : \"\")\r\n      }\r\n    >\r\n      {children}\r\n      {(hasError && <span>{error}</span>) ||\r\n        (hasWarn && <span>{warning}</span>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} ref={props.refa} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport function Input(props) {\r\n  const { input, meta, child, ...restProps } = props;\r\n  // Для установления последнего выбранного значения даты окончания скидки\r\n  // и отмены значения по умолчанию если props.input.value не пустое\r\n  const newRP = !props.input.value\r\n    ? props.lastDateValue\r\n      ? { ...restProps, value: props.lastDateValue }\r\n      : restProps\r\n    : restProps;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} ref={props.refa} {...newRP} />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  component,\r\n  validators,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div className=\"\">\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        component={component}\r\n        validate={validators}\r\n        {...props}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport function ImageField({ ...props }) {\r\n  const previewRef = useRef(null);\r\n\r\n  const prevValue = usePrevious(props.meta.pristine);\r\n  useEffect(() => {\r\n    if (prevValue === false && props.meta.pristine === true) {\r\n      previewRef.current.src = \"\";\r\n    }\r\n  }, [props.meta.pristine]);\r\n\r\n  const handlePreview = (imageUrl) => {\r\n    const previewImageDom = previewRef.current;\r\n    previewImageDom.src = imageUrl;\r\n  };\r\n\r\n  const handleChange = (event, input) => {\r\n    event.preventDefault();\r\n    let imageFile = event.target.files[0];\r\n    if (imageFile) {\r\n      const localImageUrl = URL.createObjectURL(imageFile);\r\n      const imageObject = new window.Image();\r\n\r\n      imageObject.onload = () => {\r\n        imageFile.width = imageObject.naturalWidth;\r\n        imageFile.height = imageObject.naturalHeight;\r\n        input.onChange(imageFile);\r\n        URL.revokeObjectURL(imageFile);\r\n      };\r\n      imageObject.src = localImageUrl;\r\n      handlePreview(localImageUrl);\r\n    }\r\n    event.currentTarget.value = null;\r\n  };\r\n\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <div className={styles.imgContainer}>\r\n        <img\r\n          src={\"\"}\r\n          alt={props.alt}\r\n          className=\"preview-image\"\r\n          ref={previewRef}\r\n        />\r\n      </div>\r\n      <label for={\"thatImage\"} className={styles.uploadIcon}>\r\n        <img\r\n          src={uploadIcon}\r\n          style={{ width: \"100px\", height: \"100px\" }}\r\n          alt={\"nothing\"}\r\n        />\r\n      </label>\r\n      <input\r\n        id={\"thatImage\"}\r\n        name={input.name}\r\n        style={{ opacity: 0, height: \"0px\" }}\r\n        type=\"file\"\r\n        accept={props.mimeType}\r\n        onChange={(event) => handleChange(event, input)}\r\n        {...restProps}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nImageField.propTypes = {\r\n  mimeType: PropTypes.string,\r\n  maxWidth: PropTypes.number,\r\n  maxHeight: PropTypes.number,\r\n  minWidth: PropTypes.number,\r\n  minHeight: PropTypes.number,\r\n  // redux-form props\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n","C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\firebase-service\\firebase.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\firebase-service\\product-service.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\Auth\\SignUp\\SignUp.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\redux\\app-reducer.js",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\HOCS\\withAuthRedirect.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\components\\HOCS\\withSuspense.jsx",[],"C:\\Users\\maxul\\Desktop\\worktask\\test\\src\\utils\\utils.js",[],{"ruleId":"113","severity":1,"message":"114","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":23},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":35,"column":6,"nodeType":"123","endLine":35,"endColumn":27,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":33,"column":42,"nodeType":"127","messageId":"128","endLine":33,"endColumn":43},{"ruleId":"121","severity":1,"message":"129","line":209,"column":6,"nodeType":"123","endLine":209,"endColumn":18,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"131","line":240,"column":6,"nodeType":"123","endLine":240,"endColumn":64,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":47,"column":17,"nodeType":"135","endLine":47,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":27,"column":22,"nodeType":"138","messageId":"139","endLine":27,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":8,"column":7,"nodeType":"135","endLine":8,"endColumn":30},{"ruleId":"121","severity":1,"message":"142","line":96,"column":6,"nodeType":"123","endLine":96,"endColumn":27,"suggestions":"143"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["146"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'props.match.params.productKey'. Either include it or remove the dependency array.",["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'prevValue'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [props, props.initializeApp]",{"range":"158","text":"159"},"Update the dependencies array to be: [isFetching, props.history]",{"range":"160","text":"161"},"Update the dependencies array to be: [props.match.params.key, getProduct, props.history, hasCP, props.match.params.productKey]",{"range":"162","text":"163"},"Update the dependencies array to be: [prevValue, props.meta.pristine]",{"range":"164","text":"165"},[1757,1778],"[props, props.initializeApp]",[5696,5708],"[isFetching, props.history]",[6532,6590],"[props.match.params.key, getProduct, props.history, hasCP, props.match.params.productKey]",[2285,2306],"[prevValue, props.meta.pristine]"]