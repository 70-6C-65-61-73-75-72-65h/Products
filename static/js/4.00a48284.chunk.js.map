{"version":3,"sources":["components/Catalog/Product.jsx","components/Catalog/Catalog.jsx"],"names":["Product","productKey","name","price","discount","discountEndTime","photo","deleteProduct","isFetching","Preloader","className","styles","productContainer","newPrice","console","log","toFixed","calcPrice","imgSmallContainer","src","alt","det","days","Date","getDate","calcDET","to","onClick","compose","withAuthRedirect","connect","state","products","getProducts","useState","firstfetched","setFetched","useEffect","a","fetch","productStyles","catalog","map","product","key"],"mappings":"wLAwDeA,EApDC,SAAC,GASV,IARLC,EAQI,EARJA,WACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,cAoBA,OAlBI,EADJC,WAmBuB,cAACC,EAAA,EAAD,IAErB,sBAAKC,UAAWC,IAAOC,iBAAvB,UACE,mEAAaV,KACb,6DAZc,WAChB,IAAIW,GAAYV,EAKhB,OAJIC,IACFS,GAAuB,EAAIT,EAAW,KAExCU,QAAQC,IAAIF,GACLA,EAASG,QAAQ,GAMVC,GAAZ,QACA,qBAAKP,UAAWC,IAAOO,kBAAvB,SACE,qBAAKC,IAAKb,EAAOc,IAAK,oEAEvBhB,GAAY,sBAAKM,UAAWC,IAAOP,SAAvB,mDAA0CA,EAA1C,QACZC,GACC,sBAAKK,UAAWC,IAAOP,SAAvB,0IA3BU,SAACiB,GACf,IAAIC,EAAO,IAAIC,KAAKF,EAAM,IAAIE,MAAQC,UACtC,MACQ,GAAN,OAAUF,GADPA,EAAO,GAAK,KAAO,IAAQA,EAAO,IAAM,MAAQ,EACnD,kCAEA,mCAuB8BG,CAAQpB,MAGtC,8BACE,cAAC,IAAD,CAASqB,GAAI,YAAczB,EAA3B,8FAEF,8BACE,cAAC,IAAD,CAASyB,GAAI,YAAaC,QAAS,kBAAMpB,EAAcN,IAAvD,8D,gCCsCO2B,sBACbC,IACAC,aAPsB,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAMC,SAASA,SACzBxB,WAAYuB,EAAMC,SAASxB,cAKF,CAAED,kBAAe0B,kBAF7BL,EApDU,SAAC,GAMnB,IALLK,EAKI,EALJA,YACAD,EAII,EAJJA,SACAzB,EAGI,EAHJA,cACAC,EAEI,EAFJA,WAEI,EAE+B0B,oBAAS,GAFxC,mBAEGC,EAFH,KAEiBC,EAFjB,KAYJ,OATAC,qBAAU,WAKHF,GAJM,uCAAG,sBAAAG,EAAA,6DACZF,GAAW,GADC,SAENH,IAFM,2CAAH,oDAKTM,KAED,CAACJ,EAAcC,EAAYH,IAC1BzB,EAAmB,cAACC,EAAA,EAAD,IAGrB,8BAOE,qBAAKC,UAAW8B,IAAcC,QAA9B,SACGT,EAASU,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEE1C,WAAY0C,EAAQC,IACpB1C,KAAMyC,EAAQzC,KACdC,MAAOwC,EAAQxC,MACfC,SAAUuC,EAAQvC,SAClBC,gBAAiBsC,EAAQtC,gBACzBC,MAAOqC,EAAQrC,MACfC,cAAeA,EACfC,WAAYA,GARPmC,EAAQC","file":"static/js/4.00a48284.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport styles from \"./Product.module.scss\";\r\nconst Product = ({\r\n  productKey,\r\n  name,\r\n  price,\r\n  discount,\r\n  discountEndTime,\r\n  photo,\r\n  deleteProduct,\r\n  isFetching,\r\n}) => {\r\n  const calcDET = (det) => {\r\n    let days = new Date(det - new Date()).getDate();\r\n    if ((days - 1) % 10 === 0 && !((days - 11) % 100 === 0)) {\r\n      return `${days} сутки`;\r\n    } else {\r\n      return `${days} суток`;\r\n    }\r\n  };\r\n\r\n  const calcPrice = () => {\r\n    let newPrice = +price;\r\n    if (discount) {\r\n      newPrice = newPrice * (1 - discount / 100);\r\n    }\r\n    console.log(newPrice);\r\n    return newPrice.toFixed(2);\r\n  };\r\n  if (isFetching) return <Preloader />;\r\n  return (\r\n    <div className={styles.productContainer}>\r\n      <div>Товар: {name}</div>\r\n      <div>Цена: {calcPrice()} $</div>\r\n      <div className={styles.imgSmallContainer}>\r\n        <img src={photo} alt={\"Фото товара\"} />\r\n      </div>\r\n      {discount && <div className={styles.discount}>Скидка: {discount} %</div>}\r\n      {discountEndTime && (\r\n        <div className={styles.discount}>\r\n          До конца акции осталось: {calcDET(discountEndTime)}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <NavLink to={\"/catalog/\" + productKey}>Редактировать</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to={\"/catalog/\"} onClick={() => deleteProduct(productKey)}>\r\n          Удалить\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Product;\r\n","// import React, { useEffect, useDispatch } from \"react\";\r\n// import {useSelector, shallowEqual} from 'react-redux';\r\n// import { getProducts } from \"../../redux/product-reducer\";\r\n\r\n// export default () => {\r\n//   const dispatch = useDispatch();\r\n//   const { data, fetchDataPending, fetchDataError } = useSelector((state) => ({\r\n//     data: state.data,\r\n//     fetchDataPending: state.fetchDataPending,\r\n//     fetchDataError: state.fetchDataError,\r\n//   }), shallowEqual);\r\n\r\n//   useEffect(() => {\r\n//     if (!data && !fetchDataError && !fetchDataPending) {\r\n//       dispatch(getProducts);\r\n//     }\r\n//   }, [data, fetchDataPending, fetchDataError, dispatch]);\r\n\r\n//   if(!data || fetchDataPending) return 'Loading'\r\n//   if (fetchDataError) return \"Error\";\r\n//   return <>{data}</>\r\n// }\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// import Paginator from \"../Paginator/Paginator\";\r\nimport Product from \"./Product\";\r\nimport { deleteProduct, getProducts } from \"../../redux/product-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport withAuthRedirect from \"../HOCS/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport productStyles from \"./Product.module.scss\";\r\n\r\nconst CatalogContainer = ({\r\n  getProducts,\r\n  products,\r\n  deleteProduct,\r\n  isFetching,\r\n  // ...props\r\n}) => {\r\n  // debugger;\r\n  const [firstfetched, setFetched] = useState(false);\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      setFetched(true);\r\n      await getProducts();\r\n    };\r\n    if (!firstfetched) {\r\n      fetch();\r\n    }\r\n  }, [firstfetched, setFetched, getProducts]);\r\n  if (isFetching) return <Preloader />;\r\n\r\n  return (\r\n    <div>\r\n      {/* <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      /> */}\r\n      <div className={productStyles.catalog}>\r\n        {products.map((product) => (\r\n          <Product\r\n            key={product.key}\r\n            productKey={product.key}\r\n            name={product.name}\r\n            price={product.price}\r\n            discount={product.discount}\r\n            discountEndTime={product.discountEndTime}\r\n            photo={product.photo}\r\n            deleteProduct={deleteProduct}\r\n            isFetching={isFetching}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.products,\r\n  isFetching: state.products.isFetching,\r\n});\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { deleteProduct, getProducts })\r\n)(CatalogContainer);\r\n"],"sourceRoot":""}